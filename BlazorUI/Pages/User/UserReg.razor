
<h3>Registration Form</h3>

<EditForm Model="@registrationModel" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />

    <div class="form-group">
        <label for="firstName">First Name:</label>
        <InputText id="firstName" @bind-Value="registrationModel.FirstName" class="form-control" />
        <ValidationMessage For="@(() => registrationModel.FirstName)" />
    </div>

    <div class="form-group">
        <label for="lastName">Last Name:</label>
        <InputText id="lastName" @bind-Value="registrationModel.LastName" class="form-control" />
        <ValidationMessage For="@(() => registrationModel.LastName)" />
    </div>

    <div class="form-group">
        <label for="email">Email:</label>
        <InputText id="email" @bind-Value="registrationModel.Email" class="form-control" />
        <ValidationMessage For="@(() => registrationModel.Email)" />
    </div>

    <div class="form-group">
        <label for="password">Password:</label>
        <InputText id="password" @bind-Value="registrationModel.Password" type="password" class="form-control" />
        <ValidationMessage For="@(() => registrationModel.Password)" />
    </div>

    
   <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>

@code {
    private RegistrationModel registrationModel = new RegistrationModel();


    private void HandleValidSubmit()
    {
        // Handle the submission logic here
        // You can access the form data from registrationModel
        // For example: var firstName = registrationModel.FirstName;
        // Implement your logic for handling the submitted data
    }

    private class RegistrationModel
    {
        [Required(ErrorMessage = "First Name is required")]
        public string FirstName { get; set; }

        [Required(ErrorMessage = "Last Name is required")]
        public string LastName { get; set; }

        [Required(ErrorMessage = "Email is required")]
        [EmailAddress(ErrorMessage = "Invalid email address")]
        public string Email { get; set; }

        [Required(ErrorMessage = "Password is required")]
        [MinLength(6, ErrorMessage = "Password must be at least 6 characters")]
        public string Password { get; set; }
    }
}
